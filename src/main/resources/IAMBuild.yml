AWSTemplateFormatVersion: 2010-09-09
Resources:
  POLBuildCCMPush:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: POLBuildCCMPush
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'codecommit:GitPush'
            Resource: '*'
  POLBuildCCMPull:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: POLBuildCCMPull
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'codecommit:GitPull'
            Resource: '*'
  POLBuildEC2Create:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: POLBuildEC2Create
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'ec2:CreateNetworkInterface'
              - 'ec2:DescribeNetworkInterfaces'
              - 'ec2:DescribeVpcs'
              - 'ec2:DeleteNetworkInterface'
              - 'ec2:DescribeDhcpOptions'
              - 'ec2:DescribeSubnets'
              - 'ec2:DescribeSecurityGroups'
              - 'ec2:CreateNetworkInterfacePermission'
            Resource: '*'
  POLBuildLOGCreate:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: POLBuildLOGCreate
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
              - 'logs:CreateLogGroup'
            Resource: '*'
  POLBuildSSMGetParameters:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: POLBuildSSMGetParameters
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'ssm:GetParameters'
            Resource: 'arn:aws:ssm:*:*:parameter/*'
  POLBuildIAMListAccessKeys:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: POLBuildIAMListAccessKeys
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'iam:ListAccessKeys'
            Resource: 'arn:aws:iam::*:user/*'
  ROLBuildCDB:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: ROLBuildCDB
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - !ImportValue POLBuildBCTReadOutput
        - !Ref POLBuildCCMPull
        - !Ref POLBuildEC2Create
        - !Ref POLBuildCCMPush
        - !ImportValue POLBuildBCTWriteOutput
        - !Ref POLBuildLOGCreate
        - !Ref POLBuildSSMGetParameters
        - !Ref POLBuildIAMListAccessKeys
  ROLBuildCDD:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: ROLBuildCDD
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'autoscaling:CompleteLifecycleAction'
                  - 'autoscaling:DeleteLifecycleHook'
                  - 'autoscaling:DescribeAutoScalingGroups'
                  - 'autoscaling:DescribeLifecycleHooks'
                  - 'autoscaling:PutLifecycleHook'
                  - 'autoscaling:RecordLifecycleActionHeartbeat'
                  - 'autoscaling:CreateAutoScalingGroup'
                  - 'autoscaling:UpdateAutoScalingGroup'
                  - 'autoscaling:EnableMetricsCollection'
                  - 'autoscaling:DescribeAutoScalingGroups'
                  - 'autoscaling:DescribePolicies'
                  - 'autoscaling:DescribeScheduledActions'
                  - 'autoscaling:DescribeNotificationConfigurations'
                  - 'autoscaling:DescribeLifecycleHooks'
                  - 'autoscaling:SuspendProcesses'
                  - 'autoscaling:ResumeProcesses'
                  - 'autoscaling:AttachLoadBalancers'
                  - 'autoscaling:PutScalingPolicy'
                  - 'autoscaling:PutScheduledUpdateGroupAction'
                  - 'autoscaling:PutNotificationConfiguration'
                  - 'autoscaling:PutLifecycleHook'
                  - 'autoscaling:DescribeScalingActivities'
                  - 'autoscaling:DeleteAutoScalingGroup'
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeInstanceStatus'
                  - 'ec2:TerminateInstances'
                  - 'tag:GetTags'
                  - 'tag:GetResources'
                  - 'sns:Publish'
                  - 'cloudwatch:DescribeAlarms'
                  - 'cloudwatch:PutMetricAlarm'
                  - 'elasticloadbalancing:DescribeLoadBalancers'
                  - 'elasticloadbalancing:DescribeInstanceHealth'
                  - 'elasticloadbalancing:RegisterInstancesWithLoadBalancer'
                  - 'elasticloadbalancing:DeregisterInstancesFromLoadBalancer'
                  - 'elasticloadbalancing:DescribeTargetGroups'
                  - 'elasticloadbalancing:DescribeTargetHealth'
                  - 'elasticloadbalancing:RegisterTargets'
                  - 'elasticloadbalancing:DeregisterTargets'
                Resource: '*'
  ROLBuildCDP:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: ROLBuildCDP
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Statement:
              - Action:
                  - 'iam:PassRole'
                Resource: '*'
                Effect: Allow
                Condition:
                  StringEqualsIfExists:
                    'iam:PassedToService':
                      - cloudformation.amazonaws.com
                      - elasticbeanstalk.amazonaws.com
              - Action:
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'elasticbeanstalk:*'
                  - 'ec2:*'
                  - 'elasticloadbalancing:*'
                  - 'autoscaling:*'
                  - 'cloudwatch:*'
                  - 's3:*'
                  - 'sns:*'
                  - 'cloudformation:*'
                  - 'rds:*'
                  - 'sqs:*'
                  - 'ecs:*'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'lambda:InvokeFunction'
                  - 'lambda:ListFunctions'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'opsworks:CreateDeployment'
                  - 'opsworks:DescribeApps'
                  - 'opsworks:DescribeCommands'
                  - 'opsworks:DescribeDeployments'
                  - 'opsworks:DescribeInstances'
                  - 'opsworks:DescribeStacks'
                  - 'opsworks:UpdateApp'
                  - 'opsworks:UpdateStack'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:DeleteChangeSet'
                  - 'cloudformation:DescribeChangeSet'
                  - 'cloudformation:ExecuteChangeSet'
                  - 'cloudformation:SetStackPolicy'
                  - 'cloudformation:ValidateTemplate'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
                Effect: Allow
              - Effect: Allow
                Action:
                  - 'devicefarm:ListProjects'
                  - 'devicefarm:ListDevicePools'
                  - 'devicefarm:GetRun'
                  - 'devicefarm:GetUpload'
                  - 'devicefarm:CreateUpload'
                  - 'devicefarm:ScheduleRun'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'servicecatalog:ListProvisioningArtifacts'
                  - 'servicecatalog:CreateProvisioningArtifact'
                  - 'servicecatalog:DescribeProvisioningArtifact'
                  - 'servicecatalog:DeleteProvisioningArtifact'
                  - 'servicecatalog:UpdateProduct'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'cloudformation:ValidateTemplate'
                Resource: '*'
            Version: 2012-10-17
      ManagedPolicyArns:
        - !ImportValue POLBuildBCTReadOutput
        - !ImportValue POLBuildBCTWriteOutput
        - !Ref POLBuildCCMPull
        - !Ref POLBuildCCMPush
        - !Ref POLBuildLOGCreate
        - !Ref POLBuildEC2Create
  ROLBuildIPR:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: ROLBuildIPR
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - !ImportValue POLBuildBCTReadOutput
        - !Ref POLBuildSSMGetParameters
  IPRBuild:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref ROLBuildIPR
      InstanceProfileName: IPRBuild
    DependsOn:
      - ROLBuildIPR
Outputs:
  IPRBuildOutput:
    Value: !Ref IPRBuild
    Export:
      Name: IPRBuildOutput
